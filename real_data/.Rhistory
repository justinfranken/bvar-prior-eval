download_revenue_data <- function(ticker, corp_name){
#' Downloads quarterly real financial revenue data from listed equities from macrotrends.
#'
#' Parameters:
#' - ticker (string): Ticker of the equity to be downloaded in upper case. E.g. 'AAPL'.
#' - corp_name (string): Corporate name in lower case of that company. E.g. 'apple'.
#'
#' Returns:
#' - a data.frame containing 3 columns:
#'  - date: string of the format 'YYYY-MM-DD'.
#'  - revenue: Numerical revenues in mio USD.
#'  - TTM: Trailing 12 months, which shows the revenue of the past 12 months of the quarterly data.
# get the data
url <- paste0(
"https://macrotrends.net/stocks/charts/", ticker, "/", corp_name, "/revenue"
)
URL <- GET(url,user_agent("Justin"))
webpage <- read_html(URL)
temp <- webpage %>%
html_nodes(xpath = "//table[contains(@class, 'historical_data_table')]")
quarterly_table <- temp[2] %>%
html_table(fill = TRUE)
# shape downloaded data
colnames(quarterly_table[[1]]) <- c(
"date",
"revenue"
)
cleaned_data <- quarterly_table[[1]]
cleaned_data$date <- as.Date(cleaned_data$date, format = "%Y-%m-%d")
cleaned_data$revenue <- as.numeric(
gsub("[$,]", "", cleaned_data$revenue)
)
cleaned_data <- cleaned_data[order(cleaned_data$date), ]
# computing TTM
cleaned_data$TTM <- NA
for (i in 4:nrow(cleaned_data)) {
cleaned_data$TTM[i] <- sum(
cleaned_data$revenue[(i-3):i]
)
}
# small break to prevent overuse of downloading capacity
Sys.sleep(5)
out = as.data.frame(cleaned_data)
return(out)
}
get_growth_rates <- function(input){
#' Compute the growth rates for quarterly revenue data
#'
#' Parameters:
#' - input (data.frame): The output of download_revenue_data.
#'
#' Returns:
#' - A data frame containing 5 columns with computed growth rates:
#'  - date: Column indicating the date.
#'  - quarterly_gr: Growth rate of raw quarterly data each quarter.
#'  - twelve_months_gr: Growth rate of quarterly data compared to previous 12 month revenue.
#'  - TTM_quarterly_gr: Growth rate of TTM data each quarter.
#'  - TTM_twelve_months_gr: Growth rate of TTM data compared to previous 12 month TTM revenue.
# initiate matrix
growth_rates <- data.frame(
matrix(NA, dim(input)[1], 5)
)
colnames(growth_rates) <- c(
"date",
"quarterly_gr",
"twelve_months_gr",
"TTM_quarterly_gr",
"TTM_twelve_months_gr"
)
# date
growth_rates[,1] <- input$date
# quarterly data
growth_rates[,2] <- c(NA, diff(input[,2]) / input[-length(input$TTM), 2])
growth_rates[,3] <- c(
rep(NA, 4),
(input[-(1:4), 2] - input[1:(nrow(input) - 4), 2])/input[1:(nrow(input) - 4), 2]
)
# TTM data
growth_rates[,4] <- c(NA, diff(input[,3]) / input[-length(input$TTM), 3])
growth_rates[,5] <- c(
rep(NA, 4),
(input[-(1:4), 3] - input[1:(nrow(input) - 4), 3])/input[1:(nrow(input) - 4), 3]
)
return(growth_rates)
}
# functions for analyzing real revenue data
get_industry_growth_rates <- function(tickers, corp_names, type){
#' Loop over input tickers to download industry growth rates
#'
#' Parameters:
#' - tickers (vector): Containing the tickers of the corporates to be downloaded in upper cases.
#' - corp_names (vector): Containing the names of the corporates in lower cases.
#' - type (scalar): Number indicating which growth rate is downloaded:
#'  - 2: quarterly growth rates.
#'  - 3: 12 months quarterly growth rates.
#'  - 4: TTM quarterly growth rates.
#'  - 5: TTM 12 months growth rates.
#'
#' Returns:
#' - Data.frame of industry growth rates of determined type.
# download revenue data and store in list
df_list <- list()
for (i in 1:length(tickers)) {
df_list[[i]] <- get_growth_rates(download_revenue_data(
tickers[i],
corp_names[i]))[,c(1,type)]
colnames(df_list[[i]]) = c("date", tickers[i])
cat(paste0("Downloaded ", tickers[i], ", which is of row ", nrow(df_list[[i]]), " and col ", ncol(df_list[[i]]), "\n"))
}
# merge elements
out_df <- Reduce(function(x, y) merge(x, y, by = "date"), df_list)
return(out_df)
}
plot_gr <- function(industry_gr, adj_cex = 0.7, title = "Growth Rates of Companies Over Time", legend_off = FALSE){
#' Plot industry growth rates.
#'
#' Parameters:
#' - industry_gr (data.frame): Output of get_industry_growth_rates().
#' - adj_cex (scalar): Adjust size of legend in plot.
#' - title (string): Title of the plot.
#' - legend_off (boolean): If TRUE, legend won't be displayed.
#'
#' Returns:
#' - Plot of the input growth rates.
matplot(
industry_gr[,1], industry_gr[,-1], type = "l", lty = 1,
col = 1:ncol(industry_gr[,-1]),
xlab = "Year", ylab = "Growth Rate",
main = title
)
abline(h = mean(colMeans(as.matrix(industry_gr[,-1]), na.rm = TRUE)), col = "red", lty = 2)
if (legend_off == FALSE) {
legend(
"topleft",
legend = colnames(industry_gr[,-1]),
col = 1:ncol(industry_gr[,-1]),
lty = 1,
cex = adj_cex
)
}
abline(h = 0, col = "black", lty = 2)
}
lapply(c("rvest", "dplyr", "httr", "vars", "tseries"), require, character.only = TRUE)
# --- large cap pharmaceutical -------------------------------------------------
pharma_tickers <- c("LLY", "NVO", "JNJ", "ABBV", "MRK", "AZN", "NVS", "PFE")
pharma_corp_names <- c("eli-lilly",
"novo-nordisk",
"johnson_johnson",
"abbvie", "merck",
"astrazeneca",
"novartis-ag",
"pfizer")
pharma <- get_industry_growth_rates(pharma_tickers, pharma_corp_names, 4)
# --- computer software --------------------------------------------------------
soft_tickers <- c("MSFT", "SAP", "CDNS", "MSTR", "ANSS", "PTC", "SSNC", "MANH", "PEGA")
soft_corp_names <- c("microsoft",
"sap-se",
"cadence-design-systems",
"microstrategy",
"ansys",
"ptc",
"ss-c-technologies-holdings",
"manhattan-associates",
"pegasystems"
)
soft <- get_industry_growth_rates(soft_tickers, soft_corp_names, 4)
soft <- get_industry_growth_rates(soft_tickers, soft_corp_names, 4)
# --- oil & gas --------------------------------------------------------
oag_tickers <- c("XOM", "CVX", "SHEL", "BP", "E", "YPF")
oag_corp_names <- c("exxon",
"chevron",
"shell",
"bp",
"eni-spa",
"ypf-sociedad-anonima"
)
oag <- get_industry_growth_rates(oag_tickers, oag_corp_names, 4)
# --- automotive ---------------------------------------------------------------
auto_tickers <- c("F", "GM", "TM", "BAMXF", "VWAGY", "MBGYY", "TSLA", "HOG")
auto_corp_names <- c("ford-motor",
"general-motors",
"toyota",
"bmw",
"volkswagen-ag",
"mercedes-benz-group-ag",
"tesla",
"harley-davidson"
)
auto <- get_industry_growth_rates(auto_tickers, auto_corp_names, 4)
# --- consumer products --------------------------------------------------------
cp_tickers <- c("PG", "CL", "KMB", "CHD", "CLX", "NWL", "ENR")
cp_corp_names <- c("procter-gamble",
"colgate-palmolive",
"kimberly-clark",
"church-dwight",
"clorox",
"newell-brands",
"energizer-holdings"
)
cp <- get_industry_growth_rates(cp_tickers, cp_corp_names, 4)
# --- general machinery --------------------------------------------------------
machinary_tickers <- c("PH", "ITW", "ATLKY", "DOV", "TRMB", "IEX", "GGG", "RRX")
machinary_corp_names <- c("parker-hannifin",
"illinois-tool-works",
"atlas-copco-ab",
"dover",
"trimble",
"idex",
"graco",
"regal-rexnord"
)
machinary <- get_industry_growth_rates(machinary_tickers, machinary_corp_names, 4)
# --- american banks -----------------------------------------------------------
banks_tickers <- c("JPM", "BAC", "WFC", "MS", "GS", "C", "SCHW")
banks_corp_names <- c("jpmorgan-chase",
"bank-of-america",
"wells-fargo",
"morgan-stanley",
"goldman-sachs",
"citigroup",
"charles-schwab"
)
banks <- get_industry_growth_rates(banks_tickers, banks_corp_names, 4)
rm(auto_corp_names)
rm(auto_tickers)
rm(banks_corp_names)
rm(banks_tickers)
rm(cp_corp_names)
rm(cp_tickers)
rm(machinary_corp_names)
rm(machinary_tickers)
rm(oag_corp_names)
rm(oag_tickers)
rm(pharma_corp_names)
rm(pharma_tickers)
rm(soft_corp_names)
rm(soft_tickers)
rm(download_revenue_data())
save.image("C:/Users/justi/bvar-prior-eval/code/real_data/industry_data.RData")
load("C:/Users/justi/bvar-prior-eval/code/real_data/industry_data.RData")
