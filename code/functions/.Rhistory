ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
sim_y <- function(K,
p,
T,
start_mean = 0.015,
start_growth_sd = 0.01,
trend_growth = 0.005,
d_min_coef = 0.2,
d_max_coef = 0.4,
off_d_mean_coef = 0.02,
off_d_sd_coef=0.01,
diag_min_shock = 0.005,
diag_max_shock = 0.4,
mean_vola_shock = 0.04,
sd_vola_shock = 0.01){
#' Creates T simulations of a K*1 vector y of a VAR(p) process.
#'
#' Parameters:
#' - K (scalar): How many variables are included.
#' - p (scalar): How many lags are included.
#' - T (scalar): How many observations are going to be simulated.
#' - start_mean (scalar): Average growth rate of y.
#' - start_growth_sd (scalar): Standard deviation of average growth rate of y.
#' - trend_growth (scalar): Average trend growth in simulation.
#' - d_min_coef (scalar): Minimum of the diagonal elements in the coefficient matrix.
#' - d_max_coef (scalar): Maximum of the diagonal elements in the coefficient matrix.
#' - off_d_mean_coef (scalar): Mean of off-diagonal elements in the coefficient matrix.
#' - off_d_sd_coef (scalar): Standard deviation of off-diagonal elements in the coefficient matrix.
#' - diag_min_shock (scalar): Minimum of the off diagonal element in Rho.
#' - diag_max_shock (scalar): Maximum of the off diagonal element in Rho.
#' - mean_vola_shock (scalar): Mean of the firms volatility.
#' - sd_vola_shock (scalar): Standard deviation of the firms volatility.
#'
#' Returns:
#' - K*1 matrix of simulated y's.
# y average growth rate
c <- rnorm(K, mean = start_mean, sd = start_growth_sd)
# compute coefficient matrix A
A_list <- coefficient_generator(p, K, d_min_coef, d_max_coef, off_d_mean_coef, off_d_sd_coef)
# compute shocks eps
eps <- eps_generator(K, T, diag_min_shock, diag_max_shock, mean_vola_shock, sd_vola_shock)
# initial p lags
Y <- matrix(0, nrow = T, ncol = K)
for (i in 1:p) {
Y[i,] <- c + rnorm(K, mean = 0, sd = sd_vola_shock)
}
# generate the series
for (t in (p+1):T) {
# compute the VAR component
Y_t <- trend_growth
for (lag in 1:p) {
Y_t <- Y_t + A_list[[lag]] %*% Y[t-lag,]
}
# add the shock
Y[t,] <- Y_t + eps[t,]
}
return(Y)
}
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
sim_y <- function(K,
p,
T,
start_mean = 0.015,
start_growth_sd = 0.01,
trend_growth = 0.001,
d_min_coef = 0.2,
d_max_coef = 0.4,
off_d_mean_coef = 0.02,
off_d_sd_coef=0.01,
diag_min_shock = 0.005,
diag_max_shock = 0.4,
mean_vola_shock = 0.02,
sd_vola_shock = 0.005){
#' Creates T simulations of a K*1 vector y of a VAR(p) process.
#'
#' Parameters:
#' - K (scalar): How many variables are included.
#' - p (scalar): How many lags are included.
#' - T (scalar): How many observations are going to be simulated.
#' - start_mean (scalar): Average growth rate of y.
#' - start_growth_sd (scalar): Standard deviation of average growth rate of y.
#' - trend_growth (scalar): Average trend growth in simulation.
#' - d_min_coef (scalar): Minimum of the diagonal elements in the coefficient matrix.
#' - d_max_coef (scalar): Maximum of the diagonal elements in the coefficient matrix.
#' - off_d_mean_coef (scalar): Mean of off-diagonal elements in the coefficient matrix.
#' - off_d_sd_coef (scalar): Standard deviation of off-diagonal elements in the coefficient matrix.
#' - diag_min_shock (scalar): Minimum of the off diagonal element in Rho.
#' - diag_max_shock (scalar): Maximum of the off diagonal element in Rho.
#' - mean_vola_shock (scalar): Mean of the firms volatility.
#' - sd_vola_shock (scalar): Standard deviation of the firms volatility.
#'
#' Returns:
#' - K*1 matrix of simulated y's.
# y average growth rate
c <- rnorm(K, mean = start_mean, sd = start_growth_sd)
# compute coefficient matrix A
A_list <- coefficient_generator(p, K, d_min_coef, d_max_coef, off_d_mean_coef, off_d_sd_coef)
# compute shocks eps
eps <- eps_generator(K, T, diag_min_shock, diag_max_shock, mean_vola_shock, sd_vola_shock)
# initial p lags
Y <- matrix(0, nrow = T, ncol = K)
for (i in 1:p) {
Y[i,] <- c + rnorm(K, mean = 0, sd = sd_vola_shock)
}
# generate the series
for (t in (p+1):T) {
# compute the VAR component
Y_t <- trend_growth
for (lag in 1:p) {
Y_t <- Y_t + A_list[[lag]] %*% Y[t-lag,]
}
# add the shock
Y[t,] <- Y_t + eps[t,]
}
return(Y)
}
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
sim_y <- function(K,
p,
T,
start_mean = 0.015,
start_growth_sd = 0.01,
trend_growth = 0.001,
d_min_coef = 0.2,
d_max_coef = 0.35,
off_d_mean_coef = 0.02,
off_d_sd_coef=0.01,
diag_min_shock = 0.005,
diag_max_shock = 0.4,
mean_vola_shock = 0.02,
sd_vola_shock = 0.005){
#' Creates T simulations of a K*1 vector y of a VAR(p) process.
#'
#' Parameters:
#' - K (scalar): How many variables are included.
#' - p (scalar): How many lags are included.
#' - T (scalar): How many observations are going to be simulated.
#' - start_mean (scalar): Average growth rate of y.
#' - start_growth_sd (scalar): Standard deviation of average growth rate of y.
#' - trend_growth (scalar): Average trend growth in simulation.
#' - d_min_coef (scalar): Minimum of the diagonal elements in the coefficient matrix.
#' - d_max_coef (scalar): Maximum of the diagonal elements in the coefficient matrix.
#' - off_d_mean_coef (scalar): Mean of off-diagonal elements in the coefficient matrix.
#' - off_d_sd_coef (scalar): Standard deviation of off-diagonal elements in the coefficient matrix.
#' - diag_min_shock (scalar): Minimum of the off diagonal element in Rho.
#' - diag_max_shock (scalar): Maximum of the off diagonal element in Rho.
#' - mean_vola_shock (scalar): Mean of the firms volatility.
#' - sd_vola_shock (scalar): Standard deviation of the firms volatility.
#'
#' Returns:
#' - K*1 matrix of simulated y's.
# y average growth rate
c <- rnorm(K, mean = start_mean, sd = start_growth_sd)
# compute coefficient matrix A
A_list <- coefficient_generator(p, K, d_min_coef, d_max_coef, off_d_mean_coef, off_d_sd_coef)
# compute shocks eps
eps <- eps_generator(K, T, diag_min_shock, diag_max_shock, mean_vola_shock, sd_vola_shock)
# initial p lags
Y <- matrix(0, nrow = T, ncol = K)
for (i in 1:p) {
Y[i,] <- c + rnorm(K, mean = 0, sd = sd_vola_shock)
}
# generate the series
for (t in (p+1):T) {
# compute the VAR component
Y_t <- trend_growth
for (lag in 1:p) {
Y_t <- Y_t + A_list[[lag]] %*% Y[t-lag,]
}
# add the shock
Y[t,] <- Y_t + eps[t,]
}
return(Y)
}
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
sim_y <- function(K,
p,
T,
start_mean = 0.015,
start_growth_sd = 0.01,
trend_growth = 0.001,
d_min_coef = 0.2,
d_max_coef = 0.4,
off_d_mean_coef = 0.02,
off_d_sd_coef=0.01,
diag_min_shock = 0.005,
diag_max_shock = 0.35,
mean_vola_shock = 0.02,
sd_vola_shock = 0.005){
#' Creates T simulations of a K*1 vector y of a VAR(p) process.
#'
#' Parameters:
#' - K (scalar): How many variables are included.
#' - p (scalar): How many lags are included.
#' - T (scalar): How many observations are going to be simulated.
#' - start_mean (scalar): Average growth rate of y.
#' - start_growth_sd (scalar): Standard deviation of average growth rate of y.
#' - trend_growth (scalar): Average trend growth in simulation.
#' - d_min_coef (scalar): Minimum of the diagonal elements in the coefficient matrix.
#' - d_max_coef (scalar): Maximum of the diagonal elements in the coefficient matrix.
#' - off_d_mean_coef (scalar): Mean of off-diagonal elements in the coefficient matrix.
#' - off_d_sd_coef (scalar): Standard deviation of off-diagonal elements in the coefficient matrix.
#' - diag_min_shock (scalar): Minimum of the off diagonal element in Rho.
#' - diag_max_shock (scalar): Maximum of the off diagonal element in Rho.
#' - mean_vola_shock (scalar): Mean of the firms volatility.
#' - sd_vola_shock (scalar): Standard deviation of the firms volatility.
#'
#' Returns:
#' - K*1 matrix of simulated y's.
# y average growth rate
c <- rnorm(K, mean = start_mean, sd = start_growth_sd)
# compute coefficient matrix A
A_list <- coefficient_generator(p, K, d_min_coef, d_max_coef, off_d_mean_coef, off_d_sd_coef)
# compute shocks eps
eps <- eps_generator(K, T, diag_min_shock, diag_max_shock, mean_vola_shock, sd_vola_shock)
# initial p lags
Y <- matrix(0, nrow = T, ncol = K)
for (i in 1:p) {
Y[i,] <- c + rnorm(K, mean = 0, sd = sd_vola_shock)
}
# generate the series
for (t in (p+1):T) {
# compute the VAR component
Y_t <- trend_growth
for (lag in 1:p) {
Y_t <- Y_t + A_list[[lag]] %*% Y[t-lag,]
}
# add the shock
Y[t,] <- Y_t + eps[t,]
}
return(Y)
}
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
sim_y <- function(K,
p,
T,
start_mean = 0.015,
start_growth_sd = 0.01,
trend_growth = 0.001,
d_min_coef = 0.2,
d_max_coef = 0.4,
off_d_mean_coef = 0.02,
off_d_sd_coef=0.01,
diag_min_shock = 0.01,
diag_max_shock = 0.35,
mean_vola_shock = 0.02,
sd_vola_shock = 0.005){
#' Creates T simulations of a K*1 vector y of a VAR(p) process.
#'
#' Parameters:
#' - K (scalar): How many variables are included.
#' - p (scalar): How many lags are included.
#' - T (scalar): How many observations are going to be simulated.
#' - start_mean (scalar): Average growth rate of y.
#' - start_growth_sd (scalar): Standard deviation of average growth rate of y.
#' - trend_growth (scalar): Average trend growth in simulation.
#' - d_min_coef (scalar): Minimum of the diagonal elements in the coefficient matrix.
#' - d_max_coef (scalar): Maximum of the diagonal elements in the coefficient matrix.
#' - off_d_mean_coef (scalar): Mean of off-diagonal elements in the coefficient matrix.
#' - off_d_sd_coef (scalar): Standard deviation of off-diagonal elements in the coefficient matrix.
#' - diag_min_shock (scalar): Minimum of the off diagonal element in Rho.
#' - diag_max_shock (scalar): Maximum of the off diagonal element in Rho.
#' - mean_vola_shock (scalar): Mean of the firms volatility.
#' - sd_vola_shock (scalar): Standard deviation of the firms volatility.
#'
#' Returns:
#' - K*1 matrix of simulated y's.
# y average growth rate
c <- rnorm(K, mean = start_mean, sd = start_growth_sd)
# compute coefficient matrix A
A_list <- coefficient_generator(p, K, d_min_coef, d_max_coef, off_d_mean_coef, off_d_sd_coef)
# compute shocks eps
eps <- eps_generator(K, T, diag_min_shock, diag_max_shock, mean_vola_shock, sd_vola_shock)
# initial p lags
Y <- matrix(0, nrow = T, ncol = K)
for (i in 1:p) {
Y[i,] <- c + rnorm(K, mean = 0, sd = sd_vola_shock)
}
# generate the series
for (t in (p+1):T) {
# compute the VAR component
Y_t <- trend_growth
for (lag in 1:p) {
Y_t <- Y_t + A_list[[lag]] %*% Y[t-lag,]
}
# add the shock
Y[t,] <- Y_t + eps[t,]
}
return(Y)
}
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
sim_y <- function(K,
p,
T,
start_mean = 0.015,
start_growth_sd = 0.01,
trend_growth = 0.001,
d_min_coef = 0.2,
d_max_coef = 0.4,
off_d_mean_coef = 0.02,
off_d_sd_coef=0.01,
diag_min_shock = 0.01,
diag_max_shock = 0.4,
mean_vola_shock = 0.02,
sd_vola_shock = 0.005){
#' Creates T simulations of a K*1 vector y of a VAR(p) process.
#'
#' Parameters:
#' - K (scalar): How many variables are included.
#' - p (scalar): How many lags are included.
#' - T (scalar): How many observations are going to be simulated.
#' - start_mean (scalar): Average growth rate of y.
#' - start_growth_sd (scalar): Standard deviation of average growth rate of y.
#' - trend_growth (scalar): Average trend growth in simulation.
#' - d_min_coef (scalar): Minimum of the diagonal elements in the coefficient matrix.
#' - d_max_coef (scalar): Maximum of the diagonal elements in the coefficient matrix.
#' - off_d_mean_coef (scalar): Mean of off-diagonal elements in the coefficient matrix.
#' - off_d_sd_coef (scalar): Standard deviation of off-diagonal elements in the coefficient matrix.
#' - diag_min_shock (scalar): Minimum of the off diagonal element in Rho.
#' - diag_max_shock (scalar): Maximum of the off diagonal element in Rho.
#' - mean_vola_shock (scalar): Mean of the firms volatility.
#' - sd_vola_shock (scalar): Standard deviation of the firms volatility.
#'
#' Returns:
#' - K*1 matrix of simulated y's.
# y average growth rate
c <- rnorm(K, mean = start_mean, sd = start_growth_sd)
# compute coefficient matrix A
A_list <- coefficient_generator(p, K, d_min_coef, d_max_coef, off_d_mean_coef, off_d_sd_coef)
# compute shocks eps
eps <- eps_generator(K, T, diag_min_shock, diag_max_shock, mean_vola_shock, sd_vola_shock)
# initial p lags
Y <- matrix(0, nrow = T, ncol = K)
for (i in 1:p) {
Y[i,] <- c + rnorm(K, mean = 0, sd = sd_vola_shock)
}
# generate the series
for (t in (p+1):T) {
# compute the VAR component
Y_t <- trend_growth
for (lag in 1:p) {
Y_t <- Y_t + A_list[[lag]] %*% Y[t-lag,]
}
# add the shock
Y[t,] <- Y_t + eps[t,]
}
return(Y)
}
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
ts.plot(sim_y(K, p, T), col=1:K, main="Simulated Growth Rates of Comparable Firms")
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
mean(colMeans(sim_y(K, p, T)))
colMeans(sim_y(K, p, T))
colMeans(sim_y(K, p, T))
colMeans(sim_y(K, p, T))
colMeans(sim_y(K, p, T))
